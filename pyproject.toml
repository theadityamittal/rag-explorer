[build-system]
requires = ["setuptools>=61", "setuptools-scm[toml]>=6.2", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "rag-explorer"
dynamic = ["version"]
authors = [{name = "Aditya Mittal", email = "theadityamittal@gmail.com"}]
description = "Simple personal RAG exploration tool"
readme = "README.md"
requires-python = ">=3.9"
license = "MIT"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

dependencies = [
    "click>=8.1.0",
    "rich>=13.0.0",
    "chromadb==0.5.5",
    "python-dotenv==1.0.1",
    "beautifulsoup4>=4.12.3",
    "lxml>=5.2.2",
    "openai>=1.0.0",
    "anthropic>=0.25.0",
    "google-generativeai>=0.3.0",
    "ollama>=0.3.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "black>=23.0.0",
    "isort>=5.12.0",
]

[project.scripts]
rag-explorer = "rag_explorer.cli.simple_main:cli"

[project.urls]
Homepage = "https://github.com/theadityamittal/support-deflect-bot"
Repository = "https://github.com/theadityamittal/support-deflect-bot"
Issues = "https://github.com/theadityamittal/support-deflect-bot/issues"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
rag_explorer = ["*.md", "*.txt", "*.json"]

[tool.setuptools_scm]
write_to = "src/rag_explorer/_version.py"
version_scheme = "post-release"
local_scheme = "no-local-version"

[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'
extend-exclude = '''
/(
  src/rag_explorer/_version\.py
)/
'''
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  | chroma_db
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["src", "rag_explorer"]
skip_glob = ["chroma_db/*"]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false  # Gradually enable
ignore_missing_imports = true
exclude = [
    "chroma_db",
    "build",
    "dist"
]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-v",
    "--tb=short",
    "--strict-markers",
    "--disable-warnings",
    "--asyncio-mode=auto"
]
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning"
]
markers = [
    "unit: Unit tests",
    "integration: Integration tests", 
    "requires_real_api: Tests requiring real API calls",
    "requires_ollama: Tests requiring Ollama service",
    "slow: Slow running tests"
]

[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/conftest.py",
    "*/__pycache__/*",
    "*/chroma_db/*"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "@abstract"
]
